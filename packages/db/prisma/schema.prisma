// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

enum Side {
  yes
  no
}

enum OrderType {
  buy
  sell
}

enum OrderStatus {
  filled
  pending
  cancelled
  partial
}

model StockBalance {
  id        String @id @default(uuid())
  user      User   @relation(fields: [userId], references: [id])
  userId    String
  side      Side
  locked    Int
  available Int
  marketId  String
  market    Market @relation(fields: [marketId], references: [id])
}

model InrBalance {
  id        String @id @default(uuid())
  locked    Int    @default(0)
  available Int    @default(0)
  userId    String @unique
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id           String         @id @default(uuid())
  email        String         @unique
  password     String
  role         Role
  stockBalance StockBalance[]
  orders       Order[]
  inrBalance   InrBalance?
}

model Market {
  id            String         @id @default(uuid())
  title         String
  description   String
  sourceOfTruth String
  endDate       DateTime
  imageUrl      String
  StockBalance  StockBalance[]
  orders        Order[]
}

model Order {
  id           String      @id @default(uuid())
  side         Side
  type         OrderType
  status       OrderStatus
  price        Int
  quantity     Int
  remainingQty Int
  userId       String
  user         User        @relation(fields: [userId], references: [id])
  marketId     String
  market       Market      @relation(fields: [marketId], references: [id])
}
